import tornado.web
from tornado import httpclient
import json
import database as DB
from config import GEETEST


class BaseHandler(tornado.web.RequestHandler):

    def initialize(self):
        self.session = DB.Session()
        self.redis = DB.Redis()

    def on_finish(self):
        self.session.close()


class JSONHandler(BaseHandler):

    def set_default_headers(self):
        self.set_header("Content-Type","application/json;charset=UTF-8")

    def prepare(self):
        self.res ={}
        if self.request.method not in ("GET","HEAD"):
            try:
                body = self.request.body.decode('utf8')
                if body:
                    self.json_args = json.loads(body)
                else:
                    self.json_args = None
            except Exception as e:
                print("json arguments error")

    def write_error(self,mesg):
        self.res['status'] = 2
        self.res['mesg'] = mesg

        self.finish(json.dumps(self.res))

class UserHandler(JSONHandler):

    pass


class UserDetailHandler(JSONHandler):

    pass


class ActivityHandler(JSONHandler):

    pass


class ActivityDetailHandler(JSONHandler):
    
    pass


class VerifyHandler(JSONHandler):
    
    def gt_register(self):
        apireg = GEETEST['REGISTER_URL']
        regurl = apireg + "gt=%s"%GEETEST['CAPTCHA_ID']
        http_cli = httpclient.HTTPClient()
        try:
            response = http_cli.fetch(regurl)
            result = response.body.decode('utf8')
        except httpclient.HTTPError as e:
            result = ''
        http_cli.close()
        return result

    def get(self):
        try:
            challenge = self.gt_register()
        except:
            challenge = ''
        if len(challenge) == 32:
            url = "%s%s&challenge=%s&product=%s" %(GEETEST['BASEURL'],
                                                  GEETEST['CAPTCHA_ID'],
                                                  challenge,
                                                  GEETEST['PRODUCT'])

            return url
        else:
            return 0
